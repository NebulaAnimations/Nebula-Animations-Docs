"use strict";(self.webpackChunkna_docs_site=self.webpackChunkna_docs_site||[]).push([[1265],{3308:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=n(5893),i=n(1151);const r={title:"Texture Settings",description:"Only active on texture input mode"},a="Texture Settings",c={id:"magic-decal/v1_docs/material-inspector/texture_settings",title:"Texture Settings",description:"Only active on texture input mode",source:"@site/docs/01_magic-decal/03_v1_docs/02_material-inspector/05_texture_settings.md",sourceDirName:"01_magic-decal/03_v1_docs/02_material-inspector",slug:"/magic-decal/v1_docs/material-inspector/texture_settings",permalink:"/magic-decal/v1_docs/material-inspector/texture_settings",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Texture Settings",description:"Only active on texture input mode"},sidebar:"tutorialSidebar",previous:{title:"Noise Settings",permalink:"/magic-decal/v1_docs/material-inspector/noise_settings"},next:{title:"Shader Settings",permalink:"/magic-decal/v1_docs/material-inspector/shader_settings"}},o={},l=[{value:"Texture scale X &amp; Y",id:"texture-scale-x--y",level:2},{value:"Texture Scale Uniform",id:"texture-scale-uniform",level:2},{value:"Offset X &amp; Y",id:"offset-x--y",level:2},{value:"Texture Scale Speed",id:"texture-scale-speed",level:2},{value:"Warp Texture Intensity",id:"warp-texture-intensity",level:2},{value:"Warp Texture Settings",id:"warp-texture-settings",level:2}];function u(e){const t={h1:"h1",h2:"h2",p:"p",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"texture-settings",children:"Texture Settings"}),"\n",(0,s.jsx)(t.h2,{id:"texture-scale-x--y",children:"Texture scale X & Y"}),"\n",(0,s.jsx)(t.p,{children:"Changes the scale of the texture on the X & Y planes, useful if you need to mirror the texture."}),"\n",(0,s.jsx)(t.h2,{id:"texture-scale-uniform",children:"Texture Scale Uniform"}),"\n",(0,s.jsx)(t.p,{children:"Changes both the X & Y scale at the same time."}),"\n",(0,s.jsx)(t.h2,{id:"offset-x--y",children:"Offset X & Y"}),"\n",(0,s.jsx)(t.p,{children:"If the texture is not centered use these values to move it to the desired position."}),"\n",(0,s.jsx)(t.h2,{id:"texture-scale-speed",children:"Texture Scale Speed"}),"\n",(0,s.jsx)(t.p,{children:"Changes how fast scaling works, if you need to fine-tune the decal to an exact scale drop this value lower."}),"\n",(0,s.jsx)(t.h2,{id:"warp-texture-intensity",children:"Warp Texture Intensity"}),"\n",(0,s.jsx)(t.p,{children:"Sets how much influence the warp texture has to displace the main texture."}),"\n",(0,s.jsx)(t.h2,{id:"warp-texture-settings",children:"Warp Texture Settings"}),"\n",(0,s.jsx)(t.p,{children:"Same as the Texture settings."})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>a});var s=n(7294);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);